#########################################################################
# Title:            Community: Jira                                     #
# Author(s):        FullCycle                                           #
# URL:              https://github.com/Cloudbox/Community               #
# Docker Image(s):  atlassian/jira-software                             #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Setting CloudFlare DNS Record"
  include_role:
    name: cloudflare-dns
  vars:
    record: jira
  when: cloudflare_enabled

- name: Stop and remove any existing container
  docker_container:
    name: jira
    state: absent

- name: Create jira directories
  file: "path={{ item }} state=directory mode=0775 owner={{ user.name }} group={{ user.name }}"
  with_items:
    - /opt/jira

- name: Create and start container
  docker_container:
    name: jira
    image: "atlassian/jira-software:latest"
    pull: yes
    published_ports:
      - "8080:8080"
      - "8081:8081"
    env:
      TZ: "{{ tz }}"
      PUID: "{{ uid }}"
      PGID: "{{ gid }}"
      VIRTUAL_HOST: "jira.{{ user.domain }}"
      VIRTUAL_PORT: "8080"
      LETSENCRYPT_HOST: "jira.{{ user.domain }}"
      LETSENCRYPT_EMAIL: "{{ user.email }}"
      ATL_TOMCAT_SECURE: "true"
      ATL_TOMCAT_SCHEME: "https"
      ATL_PROXY_PORT: "443"
      ATL_PROXY_NAME: "jira.{{ user.domain }}"
      JVM_MINIMUM_MEMORY: "2048m"
      JVM_MAXIMUM_MEMORY: "8192m"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/opt/jira:/var/atlassian/application-data/jira"
    labels:
      "com.github.cloudbox.cloudbox_managed": "true"
    networks:
      - name: cloudbox
        aliases:
          - jira
    purge_networks: yes
    restart_policy: unless-stopped
    state: started
